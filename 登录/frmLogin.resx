<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAasAAADwCAIAAAAxTdy6AAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACw8AAAsPAZL5A6UAAASKSURBVHhe7dlBbiI7AEXRv9lk
        s7CoT3fSNDjApI1k1z3SURS5MqjR1av4v8/zJ0DTZgX8OH2sb3hnYFk7FXAIzbKG1waWpYDzDa8NLEsB
        5xteG1iWAs43vDawLAWcb3htYFkKON/w2sCyFHC+4bWBZSngfMNrA8tSwPmG1waWpYDzDa8NLEsB5xte
        G1iWAs43vDawLAWcb3htYFk7FRBgLgUEuhQQ6FJAoEsBgS4FBLoUEOhSQKBLAYEuBQS6FBDoUkCgSwGB
        LgUEuhQQ6FJAoEsBgS4FBLoUEOhSQKBLAYEuBQS6FBDoUkCgSwGBLgUEuhQQ6FJAoGunAn6cPnYxvDmw
        pq024OlXBC+//KzM18nP8xeP3nL+5w2BLWy1Ac/iAsy0XwH/Dq7bR7dD7Ob8xaN3nwPrswGBrs1uQr5+
        /hxc18Ph/MWjN53LNGxEASefKyBsRAEnnysgbEQBJ58rIGzETQjQpYBAlwICXQoIdO13EwIwy34FvL14
        vX308PzFozedG6qwERsQ6NqpgJ+nHycA/8BNCNC11QYEmEoBgS4FBLq2+j+gu2BgKgUEuhQQ6FJAoMtN
        CNClgECXAgJdCgh0uQkBuhQQ6FJAoEsBgS43IUCXAgJdCgh0KSDQ5SYE6FJAoEsBgS4FBLrchABdCgh0
        KSDQpYBAl5sQoEsBgS4FBLoUEOhyEwJ0KSDQtV8BL9/CXx4eDucvHr3jfHgELM4GBLr2uwl5uLauh8P5
        i0fvOB8eAYvbqoBnfQFm2uor+PTr58O1dT0czl88esf58AhYnA0IdLkJAbruCug7DkgZN6ACAh02INBl
        AwJdNiDQZQMCXQoIdPkKBrpsQKDLBgS6bECgywYEumxAoMsGBLoUEOjyFQx02YBAlw0IdNmAQJcNCHTZ
        gECXDQh0KSDQ5SsY6LIBgS4bEOiyAYEuGxDosgGBLhsQ6FJAoMtXMNBlAwJdNiDQZQMCXTYg0GUDAl02
        INClgECXr2CgywYEumxAoMsGBLpsQKDLBgS6bECgSwGBLl/BQJcNCHTZgECXDQh02YBAlw0IdNmAQJcC
        Al2+goEuGxDosgGBLhsQ6LIBgS4bEOiyAYEuBQS6fAUDXTYg0GUDAl0KCHQpINClgECXAgJdCgh0KSDQ
        pYBAlwICXQoIdCkg0KWAQJcCAl0KCHQpINClgECXAgJdCgh0KSDQpYBAlwICXQoIdCkg0KWAQJcCAl0K
        CHQpINClgECXAgJdCgh0KSDQpYBAlwICXQoIdCkg0KWAQNd9AU8KCITYgEDXXQEv+VNAoMMGBLpsQKDL
        BgS6bECgywYEumxAoEsBgS5fwUDX/QY824BAyIMCXr+Fv3+eNRE4pgf/B/z2O3zfETQMgSMa/w948TeC
        N4a/ATiABzch365fxP45CByUDQh02YBAlw0IdNmAQJcNCHQ934D3hj8DOIDnG9BXMHB0voKBLjchQJcN
        CHTZgECXDQh02YBA1/MNqIDA0T3fgPeGPwM4AF/BQJebEKDLBgS6bECgywYEumxAoOv5Brz4moE2IHBI
        58//AZVTE3tWgFvLAAAAAElFTkSuQmCC
</value>
  </data>
</root>